---
- name: Rust | Ensure current system is x86_64
  assert:
    that: ansible_architecture in ['x86_64', 'x86-64', 'x64', 'amd64']

- name: Rust | Check if locally installed.
  command: "which rustup"
  changed_when: false
  register: is_rust_exist

- name: Rust | Determine the version of local installation.
  command: rustc --version | grep -oP 'rustc \K([0-9]*\.?)*'
  register: rust_local_version
  changed_when: false
  when: is_rust_exist.rc == 0

- name: Rust | Determine the latest version.
  shell: "curl -s https://api.github.com/repos/rust-lang/rust/releases/latest | grep -Po '\"tag_name\": ?\"\\K.*?(?=\")'"
  changed_when: false
  register: rust_latest_version

- name: Rust | Ensure rustup is updated.
  command: rustup self update
  changed_when:
    - "'updated' in rustup_update_res.stdout"
    - "'unchanged' not in rustup_update_res.stdout"
  register: rustup_update_res
  when:
    - rust_local_verison.rc == 0 and
      rust_latest_version.stdout is version(rust_local_version.stdout, '>')

- name: Rust | Ensure local version is updated.
  command: rustup update
  changed_when:
    - "'updated' in rust_update_res.stdout"
    - "'unchanged' not in rust_update_res.stdout"
  register: rust_update_res
  when:
    - rust_local_verison.rc == 0 and
      rust_latest_version.stdout is version(rust_local_version.stdout, '>')

- name: Rust | Ensure rustup in installed.
  when: is_rust_exist.rc != 0
  block:
    - name: Rust | Ensure tempdir is created.
      tempfile:
        state: directory
        prefix: rust-
      register: _rust_tempdir

    - name: Rust | Ensure Rustup is downloaded
      get_url:
        url: "{{ rustup_url }}"
        dest: "{{ _rust_tempdir.path }}/rustup-init"
        mode: 0755

    - name: Rust | Ensure Rustup is installed.
      command:
        argv:
          - "rustup-init"
          - "-y"
          - "--profile"
          - "default"
        chdir: "{{ _rust_tempdir.path }}"
      register: rustup_out
      changed_when: false #need to add suitable changed clause
      environment:
        RUSTUP_HOME: "{{ xdg_data }}/rustup"
        CARGO_HOME: "{{ xdg_data }}/cargo"

    - name: Rust | Ensure unwanted files are cleaned up.
      file:
        path: "{{ _rust_tempdir.path }}"
        state: absent
      when: _rust_tempdir.path is defined
